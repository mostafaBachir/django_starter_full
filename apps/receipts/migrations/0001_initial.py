# Generated by Django 5.2.3 on 2025-06-27 16:49

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('icon', models.CharField(default='category', max_length=50, verbose_name='Icône')),
                ('color', models.CharField(default='#6B7280', max_length=7, verbose_name='Couleur')),
                ('budget_percentage', models.DecimalField(decimal_places=2, default=0, help_text='% du budget recommandé', max_digits=5)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='receipts.category')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'db_table': 'receipts_category',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('display_name', models.CharField(max_length=255, verbose_name="Nom d'affichage")),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('merchant_type', models.CharField(choices=[('grocery', 'Épicerie'), ('restaurant', 'Restaurant'), ('pharmacy', 'Pharmacie'), ('gas', 'Station-service'), ('retail', 'Détail'), ('entertainment', 'Divertissement'), ('travel', 'Voyage'), ('online', 'En ligne'), ('other', 'Autre')], default='other', max_length=20)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='merchants/logos/')),
                ('brand_color', models.CharField(default='#000000', help_text='Couleur hex', max_length=7)),
                ('is_partner', models.BooleanField(default=False, verbose_name='Partenaire')),
                ('cashback_rate', models.DecimalField(decimal_places=2, default=2.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Taux cashback %')),
                ('bonus_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux bonus %')),
                ('locations', django.contrib.gis.db.models.fields.MultiPointField(blank=True, help_text='Emplacements physiques', null=True, srid=4326)),
                ('tax_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro TPS/TVQ')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('total_receipts', models.IntegerField(default=0)),
                ('total_cashback_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='merchants', to='receipts.category')),
            ],
            options={
                'verbose_name': 'Marchand',
                'verbose_name_plural': 'Marchands',
                'db_table': 'receipts_merchant',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MerchantAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=255, unique=True, verbose_name='Alias')),
                ('confidence', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Confiance')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='receipts.merchant')),
            ],
            options={
                'verbose_name': 'Alias marchand',
                'verbose_name_plural': 'Alias marchands',
                'db_table': 'receipts_merchant_alias',
                'ordering': ['-confidence'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('original_image', models.ImageField(upload_to='receipts/originals/%Y/%m/%d/', verbose_name='Image originale')),
                ('processed_image', models.ImageField(blank=True, null=True, upload_to='receipts/processed/%Y/%m/%d/', verbose_name='Image traitée')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='receipts/thumbnails/%Y/%m/%d/', verbose_name='Miniature')),
                ('image_hash', models.CharField(help_text="SHA256 de l'image", max_length=64, null=True, unique=True)),
                ('ocr_status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'Traitement'), ('completed', 'Complété'), ('failed', 'Échoué'), ('manual_review', 'Révision manuelle')], default='pending', max_length=20)),
                ('ocr_provider', models.CharField(blank=True, choices=[('gemini', 'Google Gemini'), ('gpt', 'OpenAI GPT'), ('xai', 'xAI'), ('manual', 'Saisie manuelle')], max_length=20, null=True)),
                ('ocr_confidence', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('merchant_name_raw', models.CharField(blank=True, max_length=255, verbose_name='Nom marchand brut')),
                ('subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Sous-total')),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Taxes')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total')),
                ('currency', models.CharField(default='CAD', max_length=3, verbose_name='Devise')),
                ('purchase_date', models.DateField(verbose_name="Date d'achat")),
                ('purchase_time', models.TimeField(blank=True, null=True, verbose_name="Heure d'achat")),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None, verbose_name='Tags')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Localisation')),
                ('location_accuracy', models.FloatField(blank=True, null=True, verbose_name='Précision GPS (m)')),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ville')),
                ('province', models.CharField(blank=True, max_length=50, verbose_name='Province')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Code postal')),
                ('cashback_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Taux cashback appliqué %')),
                ('cashback_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Montant cashback')),
                ('bonus_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Bonus')),
                ('points_earned', models.IntegerField(default=0, verbose_name='Points gagnés')),
                ('ocr_raw_response', models.JSONField(blank=True, default=dict, verbose_name='Réponse OCR brute')),
                ('extracted_text', models.TextField(blank=True, verbose_name='Texte extrait')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Vérifié')),
                ('is_duplicate', models.BooleanField(default=False, verbose_name='Duplicata')),
                ('uploaded_via', models.CharField(choices=[('mobile', 'Mobile'), ('web', 'Web'), ('api', 'API')], default='mobile', max_length=20)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receipts', to='receipts.category')),
                ('duplicate_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='duplicates', to='receipts.receipt')),
                ('merchant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receipts', to='receipts.merchant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reçu',
                'verbose_name_plural': 'Reçus',
                'db_table': 'receipts_receipt',
                'ordering': ['-purchase_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OCRProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('gemini', 'Google Gemini'), ('gpt', 'OpenAI GPT'), ('xai', 'xAI'), ('manual', 'Saisie manuelle')], max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, help_text='Temps en secondes', null=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('api_credits_used', models.IntegerField(default=0)),
                ('api_cost', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ocr_logs', to='receipts.receipt')),
            ],
            options={
                'verbose_name': 'Log OCR',
                'verbose_name_plural': 'Logs OCR',
                'db_table': 'receipts_ocr_log',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ReceiptImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='receipts/additional/%Y/%m/%d/')),
                ('page_number', models.IntegerField(default=1, verbose_name='Numéro de page')),
                ('extracted_text', models.TextField(blank=True, verbose_name='Texte extrait')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='receipts.receipt')),
            ],
            options={
                'verbose_name': 'Image additionnelle',
                'verbose_name_plural': 'Images additionnelles',
                'db_table': 'receipts_receipt_image',
                'ordering': ['page_number'],
            },
        ),
        migrations.CreateModel(
            name='ReceiptItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('quantity', models.DecimalField(decimal_places=3, default=1, max_digits=10, verbose_name='Quantité')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix unitaire')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix total')),
                ('sku', models.CharField(blank=True, max_length=50, verbose_name='SKU')),
                ('barcode', models.CharField(blank=True, max_length=50, verbose_name='Code-barres')),
                ('is_taxable', models.BooleanField(default=True, verbose_name='Taxable')),
                ('is_refundable', models.BooleanField(default=True, verbose_name='Remboursable')),
                ('order', models.IntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='receipts.category')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='receipts.receipt')),
            ],
            options={
                'verbose_name': 'Article de reçu',
                'verbose_name_plural': 'Articles de reçu',
                'db_table': 'receipts_receipt_item',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.AddIndex(
            model_name='merchant',
            index=models.Index(fields=['slug'], name='receipts_me_slug_80d934_idx'),
        ),
        migrations.AddIndex(
            model_name='merchant',
            index=models.Index(fields=['is_partner', 'is_active'], name='receipts_me_is_part_b4d46c_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['user', '-purchase_date'], name='receipts_re_user_id_2139f5_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['merchant', '-purchase_date'], name='receipts_re_merchan_2fbd81_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['ocr_status'], name='receipts_re_ocr_sta_2afa51_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['image_hash'], name='receipts_re_image_h_da4927_idx'),
        ),
        migrations.AddIndex(
            model_name='ocrprocessinglog',
            index=models.Index(fields=['receipt', '-started_at'], name='receipts_oc_receipt_d53f57_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='receiptimage',
            unique_together={('receipt', 'page_number')},
        ),
    ]
